<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.myapp.IEmpRepository">

	<select id="getEmpCount" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM employees 
		<if test="deptid != null">
			WHERE department_id=#{deptid}
		</if>
	</select>
	
	<resultMap type="com.kosa.myapp.EmpVO" id="empMap">
		<result column="employee_id" property="employeeId"/>
		<result column="first_name" property="firstName"/>
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="phone_number" property="phoneNumber"/>
		<result column="hire_date" property="hireDate"/>
		<result column="job_id" property="jobId"/>
		<result column="salary" property="salary"/>
		<result column="commission_pct" property="commissionPct"/>
		<result column="manager_id" property="managerId"/>
		<result column="department_id" property="departmentId"/>
	</resultMap>
	
	<select id="getEmpList" resultMap="empMap">
		SELECT * FROM employees
	</select>
	
	<select id="getEmpInfo" parameterType="int" resultType="com.kosa.myapp.EmpVO">
		SELECT employee_id 		AS employeeId,
			   first_name 		AS firstName,
			   last_name 		AS lastName,
			   email 			AS email,
			   phone_number 	AS phoneNumber,
			   hire_date		AS hireDate,
			   job_id			AS jobId,
			   salary 			AS salary,
			   commission_pct	AS commissionPct,
			   manager_id		AS managerId,
			   department_id	AS departmentId
		FROM employees WHERE employee_id=#{empid}
	</select>
	
	<update id="updateEmp" parameterType="com.kosa.myapp.EmpVO">
		UPDATE employees
		SET first_name=#{firstName}, last_name=#{lastName}, email=#{email},
			phone_number=#{phoneNumber}, hire_date=#{hireDate}, job_id=#{jobId},
			salary=#{salary}, commission_pct=#{commissionPct}, manager_id=#{managerId},
			department_id=#{departmentId}
		WHERE employee_id=#{employeeId}
	</update>
	
	<insert id="insertEmp" parameterType="com.kosa.myapp.EmpVO">
		INSERT INTO employees (employee_id, first_name, last_name, email,
							   phone_number, hire_date, job_id, salary,
							   commission_pct, manager_id, department_id)
		VALUES (#{employeeId}, #{firstName}, #{lastName}, #{email}, #{phoneNumber}, 
				#{hireDate}, #{jobId}, #{salary}, #{commissionPct}, #{managerId}, #{departmentId})
	</insert>
	
	<delete id="deleteJobHistory" parameterType="int">
		DELETE job_history WHERE employee_id=#{empid}
	</delete>
	
	<delete id="deleteEmp">
		DELETE employees WHERE employee_id=#{empid} and email=#{email}
	</delete>
	
	<select id="getAllJobId" resultType="hashmap">
		SELECT job_id AS "jobId", job_title AS "title" FROM jobs
	</select>
	
	<select id="getAllManagerId" resultType="hashmap">
		SELECT
			D.MANAGER_ID AS "managerId",
			E.FIRST_NAME AS "firstName"
		FROM DEPARTMENTS D JOIN EMPLOYEES E
			ON D.MANAGER_ID = E.EMPLOYEE_ID
		ORDER BY D.MANAGER_ID	
	</select>
	
	<select id="getAllDeptId" resultType="hashmap">
		SELECT
			DEPARTMENT_ID 	AS "departmentId",
			DEPARTMENT_NAME AS "departmentName"
		FROM DEPARTMENTS
	</select>
</mapper>